apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-{{ .Release.Name }}
  labels:
    workload.user.cattle.io/workloadselector: app-{{ .Release.Name }}
spec:
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: app-{{ .Release.Name }}
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: app-{{ .Release.Name }}
    spec:
      restartPolicy: Always
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: volume-claim-{{ .Release.Name }}
      containers:
        - name: wordpress
          image: lttech/frankenphp:8.3.1
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            failureThreshold: 3
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            tcpSocket:
              port: http
            failureThreshold: 3
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 3
          volumeMounts:
            - name: data
              mountPath: /app/public
              subPath: web
          envFrom:
            - secretRef:
                name: secret-{{ .Release.Name }}-wordpress
        - name: database
          image: mariadb:11.1
          args: ["--skip-log-bin"]
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - healthcheck.sh
                - '--connect'
                - '--innodb_initialized'
            failureThreshold: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            exec:
              command:
                - healthcheck.sh
                - '--connect'
                - '--innodb_initialized'
            failureThreshold: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
              subPath: sql
          envFrom:
            - secretRef:
                name: secret-{{ .Release.Name }}-database
  strategy:
    type: Recreate
