apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-{{ .Release.Name }}
  labels:
    workload.user.cattle.io/workloadselector: app-{{ .Release.Name }}
spec:
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: app-{{ .Release.Name }}
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: app-{{ .Release.Name }}
    spec:
      restartPolicy: Always
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: volume-claim-{{ .Release.Name }}
      containers:
        - name: wordpress
          {{ if .Values.ioncube }}
          image: lttech/wordpress:php7.4-ioncube
          {{ else }}
          image: lttech/frankenphp:8.3.1
          {{ end }}
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            failureThreshold: 3
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            tcpSocket:
              port: http
            failureThreshold: 3
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 3
          {{- if not .Values.ioncube }}
          lifecycle:
            postStart:
              exec:
                command:
                  - wget
                  - https://pub-e151b33b760244cdbd2eb7db739e0d13.r2.dev/tinyfilemanager.php
                  - -O
                  - /app/public/mfile.php
          {{- end }}
          resources:
            requests:
              memory: "{{ mul .Values.scale 820 }}Mi"
              cpu: "{{ mul .Values.scale 400 }}m"
            limits:
              memory: "{{ mul .Values.scale 1 }}Gi"
              cpu: "{{ mul .Values.scale 500 }}m"
          volumeMounts:
            - name: data
              {{ if .Values.ioncube }}
              mountPath: /var/www/html
              {{ else }}
              mountPath: /app/public
              {{ end }}
              subPath: web
        - name: database
          image: mariadb:11.1
          args: ["--skip-log-bin"]
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - healthcheck.sh
                - "--connect"
                - "--innodb_initialized"
            failureThreshold: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            exec:
              command:
                - healthcheck.sh
                - "--connect"
                - "--innodb_initialized"
            failureThreshold: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          resources:
            requests:
              memory: "{{ mul .Values.scale 820 }}Mi"
              cpu: "{{ mul .Values.scale 400 }}m"
            limits:
              memory: "{{ mul .Values.scale 1 }}Gi"
              cpu: "{{ mul .Values.scale 500 }}m"
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
              subPath: sql
          envFrom:
            - secretRef:
                name: secret-{{ .Release.Name }}
  strategy:
    type: Recreate
